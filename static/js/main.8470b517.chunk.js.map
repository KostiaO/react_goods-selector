{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","showGoods","goodsArr","length","slice","join","selectGood","good","includes","setState","filter","e","this","className","map","type","onClick","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,CAAC,QAFnB,EAKEC,UAAY,SAACC,GAAD,OACVA,EAASC,OAAS,EAAlB,UACOD,EAASE,MAAM,EAAGF,EAASC,OAAS,GAAGE,KAAK,MADnD,uBAEQH,EAASA,EAASC,OAAS,IAC/BD,GATR,EAYEI,WAAa,SAACC,GACR,EAAKR,MAAMC,aAAaQ,SAASD,GACnC,EAAKE,UAAS,SAACV,GAAD,MAAY,CACxBC,aAAcD,EAAMC,aAAaU,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,SAGrD,EAAKE,UAAS,SAACV,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BO,SAnB9C,4CAwBE,WAAU,IAAD,OACCP,EAAiBY,KAAKb,MAAtBC,aAER,OACE,sBAAKa,UAAU,MAAf,UACE,kDAEGb,EAAaG,OACTS,KAAKX,UAAUD,GAChB,qBAEN,6BACGH,EAAgBiB,KAAI,SAAAP,GAAI,OACvB,qBAEEM,UAAWA,IACT,OACA,CAAE,iBAAkBb,EAAaQ,SAASD,KAJ9C,UAOGA,EACD,wBACEQ,KAAK,SACLC,QACE,kBAAM,EAAKV,WAAWC,IAH1B,SAMGP,EAAaQ,SAASD,GAAQ,SAAW,aAbvCV,EAAgBoB,QAAQV,SAkBnC,wBACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKP,SAAS,CAAET,aAAc,MAF/C,0BAxDR,GAAyBkB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8470b517.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport className from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype StateType = {\n  selectedGood: string[]\n};\n\nexport class App extends React.Component<{}, StateType> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  showGoods = (goodsArr: string[]) => (\n    goodsArr.length > 1\n      ? `${goodsArr.slice(0, goodsArr.length - 1).join(', ')}\n      and ${goodsArr[goodsArr.length - 1]}`\n      : goodsArr\n  );\n\n  selectGood = (good: string) => {\n    if (this.state.selectedGood.includes(good)) {\n      this.setState((state) => ({\n        selectedGood: state.selectedGood.filter(e => e !== good),\n      }));\n    } else {\n      this.setState((state) => ({\n        selectedGood: [...state.selectedGood, good],\n      }));\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good: -\n          {selectedGood.length\n            ? (this.showGoods(selectedGood))\n            : 'Nothing slected'}\n        </h1>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={goodsFromServer.indexOf(good)}\n              className={className(\n                'good',\n                { 'good--selected': selectedGood.includes(good) },\n              )}\n            >\n              {good}\n              <button\n                type=\"button\"\n                onClick={\n                  () => this.selectGood(good)\n                }\n              >\n                {selectedGood.includes(good) ? 'Remove' : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ selectedGood: [] })}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}